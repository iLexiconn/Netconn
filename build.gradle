plugins {
    id "java"
    id "idea"
    id "maven-publish"
}

def secretFile = file "secret.properties"
project.ext.secret = null
if (secretFile.exists()) {
    secretFile.withReader {
        def prop = new Properties()
        prop.load(it)
        project.ext.secret = new ConfigSlurper().parse prop
    }
}

version = getVersion("VERSION")
group = "net.ilexiconn"
archivesBaseName = "netconn"
sourceCompatibility = targetCompatibility = "1.6"

task sourceJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

artifacts {
    archives sourceJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId "net.ilexiconn"
            artifactId "netconn"
            version project.version

            from components.java

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
    repositories {
        maven {
            credentials {
                if (secret) {
                    username secret.username
                    password secret.password
                } else {
                    username ""
                    password ""
                }
            }
            if (secret) {
                url secret.repo
            } else {
                url ""
            }
        }
    }
}

String getVersion(String type) {
    String major = "0";
    String revision = "0";
    String patch = "0";
    String prefix = "public static final String $type = \"";
    File file = file("src/main/java/net/ilexiconn/netconn/NetconnRegistry.java")
    file.eachLine { String s ->
        s = s.trim();
        if (s.startsWith(prefix)) {
            s = s.substring(prefix.length(), s.length() - 2);
            String[] pts = s.split("\\.");

            major = pts[0];
            revision = pts[1];
            patch = pts[2];
        }
    }

    return "$major.$revision.$patch";
}